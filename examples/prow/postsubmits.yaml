postsubmits:

  org/repo:
    ### Updates patchset in the dedicated repository based on changes in the development branch
    - name: patchset-updater
      decorate: true
      decoration_config:
        skip_cloning: true
      always_run: true
      optional: false
      skip_submodules: true
      branches:
        - ^release-.*$
      spec:
        containers:
          - image: "quay.io/maistra-dev/prow-create-patches:latest"
            imagePullPolicy: Always
            env:
              # TODO: take from e.g. secrets. These are required
              - name: "GITHUB_TOKEN"
                value: "ghp_TOKEN"
              - name: "GIT_USER"
                value: "git-user"
              - name: "GIT_EMAIL"
                value: "git-email@mail.com"
            command: ["create-patches"]
            args:
            - "--repo=github.com/org/repo"
            - "--patchset=github.com/org/patchset-repo"
  
    ### Verifies if changes in the main branch (synced with upstream) are without conflicts by applying patches
    ### from active development branch. When conflict occurs the pull request is opened.
    - name: check-upstream-conflicts
      decorate: true
      decoration_config:
        skip_cloning: true
      always_run: true
      optional: false
      skip_submodules: true
      branches:
        - ^main$
      spec:
        containers:
          - image: "quay.io/maistra-dev/prow-check-conflicts:latest"
            imagePullPolicy: Always
            env:
              # TODO: take from e.g. secrets. These are required
              - name: "GITHUB_TOKEN"
                value: "ghp_TOKEN"
              - name: "GIT_USER"
                value: "git-user"
              - name: "GIT_EMAIL"
                value: "git-email@mail.com"
            command: ["check-conflicts"]
            args:
            - "--repo=github.com/org/repo"
            - "--patchset=github.com/org/patchset-repo"

